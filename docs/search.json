[
  {
    "objectID": "index.html#reales-vs-predichos",
    "href": "index.html#reales-vs-predichos",
    "title": "Midterm",
    "section": "Reales vs Predichos",
    "text": "Reales vs Predichos\n\nplt.figure()\nplt.scatter(y_test, y_pred, alpha=0.4)\nlims = [min(y_test.min(), y_pred.min()), max(y_test.max(), y_pred.max())]\nplt.plot(lims, lims)\nplt.xlabel(\"Real\"); plt.ylabel(\"Predicho\")\nplt.title(\"Valores reales vs. predichos\")\nplt.show()"
  },
  {
    "objectID": "index.html#curva-de-aprendizaje-muestra",
    "href": "index.html#curva-de-aprendizaje-muestra",
    "title": "Midterm",
    "section": "Curva de aprendizaje (muestra)",
    "text": "Curva de aprendizaje (muestra)\n\nfrom sklearn.model_selection import learning_curve\n\nsample_size = min(10000, len(X))\nX_sample = X.sample(sample_size, random_state=42)\ny_sample = y.loc[X_sample.index]\n\ntrain_sizes, train_scores, test_scores = learning_curve(\n    model, X_sample, y_sample, cv=3, scoring=\"r2\",\n    train_sizes=np.linspace(0.1, 1.0, 5)\n)\n\nplt.figure()\nplt.plot(train_sizes, train_scores.mean(axis=1), marker=\"o\", label=\"Entrenamiento\")\nplt.plot(train_sizes, test_scores.mean(axis=1), marker=\"o\", label=\"Validación CV\")\nplt.xlabel(\"Tamaño de entrenamiento (muestra)\")\nplt.ylabel(\"R² promedio (CV)\")\nplt.title(\"Curva de aprendizaje (muestra)\")\nplt.legend()\nplt.show()"
  }
]